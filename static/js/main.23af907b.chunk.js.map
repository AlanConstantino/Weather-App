{"version":3,"sources":["hooks/usePosition.js","components/Navbar.js","components/AirQuality.js","services/timeConverter.js","components/Forecast.js","components/Weather.js","components/WeatherCard.js","components/WeatherAlerts.js","components/MapWidget.js","components/LocationErrorAlert.js","App.js","services/getWeatherData.js","services/getAirPollutionData.js","services/sanitizeQuery.js","services/getGeocodeData.js","services/getReverseGeocodeData.js","index.js"],"names":["defaultSettings","enableHighAccuracy","timeout","Infinity","maximumAge","localization","search","searchToolTip","useCurrentLocation","imperial","metric","standard","language","units","unitSystem","StyledInputBase","styled","InputBase","theme","color","padding","spacing","paddingLeft","width","Navbar","lang","setLanguage","setQuery","setQueryNow","setUnits","setUserLocationError","setLatLon","userLocation","userSettings","settings","useState","position","setPosition","error","setError","onChange","coords","timestamp","lat","latitude","lon","longitude","accuracy","speed","heading","isComplete","onError","message","useEffect","navigator","geolocation","getCurrentPosition","usePosition","languageKey","unitKey","React","setSearch","unitEl","setUnitEl","unitOpen","Boolean","anchorEl","setAnchorEl","open","handleLanguageClose","event","languageNumber","currentTarget","value","handleUnitClose","unitNumber","AppBar","Toolbar","Tooltip","title","edge","placeholder","target","onKeyPress","key","IconButton","onClick","sx","marginLeft","arrow","Button","id","undefined","variant","disableElevation","endIcon","Menu","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","disableRipple","airQuality","airData","aqi","aqiTooltip","co","no","no2","o3","so2","pm2_5","pm10","nh3","AirQuality","airPollutionData","Typography","align","Accordion","AccordionSummary","expandIcon","AccordionDetails","placement","style","fontWeight","main","components","convertUnixTimeStamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","convertMilitaryTimeToRegularTime","time","split","min","max","humidity","uvIndex","windSpeed","sunrise","sunset","snow","rain","Forecast","weatherData","tempScale","speedScale","daily","map","day","i","dt","toDateString","src","code","weather","icon","alt","gutterBottom","description","temp","uvi","wind_speed","asOf","feelsLike","Weather","locationName","feels_like","formattedSunriseTime","formattedSunsetTime","formattedTime","WeatherCard","collator","Intl","Collator","toLowerCase","compare","Card","minWidth","background","boxShadow","CardContent","current","Divider","WeatherAlerts","alerts","alertStates","setAlertStates","length","Stack","marginBottom","alert","Collapse","in","component","Alert","severity","action","size","copy","handleAlertClose","fontSize","AlertTitle","marginTop","sender_name","start","end","UpdateViewTile","center","zoom","useMap","setView","TileLayer","attribution","url","MapWidget","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","MapContainer","flex","scrollWheelZoom","LocationErrorAlert","setOpen","require","config","App","query","queryNow","setLocationName","geoCodeData","setGeoCodeData","userLocationError","latLon","setWeatherData","setAirPollutionData","mounted","exclude","fetch","then","data","json","getWeatherData","process","response","list","sanitizedQuery","lower","upper","toUpperCase","res","trim","isNaN","replaceAll","sanitizeQuery","limit","getGeocodeData","local_names","name","localizedNames","className","Container","maxWidth","Box","margin","display","justifyContent","gap","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23af907b.chunk.js","sourcesContent":["// taken from here: https://github.com/trekhleb/use-position\nimport {useState, useEffect} from 'react';\n\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\nexport const usePosition = (userSettings = {}) => {\n  const settings = {\n    ...defaultSettings,\n    ...userSettings,\n  };\n\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({coords, timestamp}) => {\n    setPosition({\n      lat: coords.latitude,\n      lon: coords.longitude,\n      accuracy: coords.accuracy,\n      speed: coords.speed,\n      heading: coords.heading,\n      timestamp,\n      isComplete: true,\n    });\n  };\n\n  const onError = (error) => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n  }, []);\n\n  return {...position, error};\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Tooltip from '@mui/material/Tooltip';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { usePosition } from '../hooks/usePosition';\nimport MyLocationIcon from '@mui/icons-material/MyLocation';\n\nconst localization = {\n  'EN': {\n    search: \"Search\",\n    searchToolTip: \"City Name, State, Country (for US only, for all other countries ignore State parameter)\",\n    useCurrentLocation: \"Use Current Location\",\n    imperial: \"Imperial\",\n    metric: \"Metric\",\n    standard: \"Standard\",\n    language: \"Language\",\n    units: \"Units\",\n    unitSystem: \"Unit System\",\n  },\n  'ES': {\n    search: \"Búsqueda\",\n    searchToolTip: \"Nombre de la ciudad, estado, país (solo para EE. UU., Para todos los demás países ignore el parámetro de estado)\",\n    useCurrentLocation: \"Usar ubicación actual\",\n    imperial: \"Imperial\",\n    metric: \"Métrico\",\n    standard: \"Estándar\",\n    language: \"Idioma\",\n    units: \"Unidades\",\n    unitSystem: \"Unidad de sistema\"\n  },\n  'FR': {\n    search: \"Chercher\",\n    searchToolTip: \"Nom de la ville, État, Pays (pour les États-Unis uniquement, pour tous les autres pays, ignorez le paramètre État)\",\n    useCurrentLocation: \"Utiliser l'emplacement actuel\",\n    imperial: \"Impérial\",\n    metric: \"Métrique\",\n    standard: \"Standard\",\n    language: \"Langue\",\n    units: \"Unités\",\n    unitSystem: \"Système d'unité\"\n  },\n  'RU': {\n    search: \"Поиск\",\n    searchToolTip: \"Название города, штат, страна (только для США, для всех остальных стран параметр State игнорируется)\",\n    useCurrentLocation: \"Использовать текущее местоположение\",\n    imperial: \"Императорский\",\n    metric: \"Метрическая\",\n    standard: \"Стандарт\",\n    language: \"Язык\",\n    units: \"Единицы\",\n    unitSystem: \"Система единиц\"\n  },\n  'IT': {\n    search: \"Ricerca\",\n    searchToolTip: \"Nome città, Stato, Paese (solo per gli Stati Uniti, per tutti gli altri paesi ignorare il parametro Stato)\",\n    useCurrentLocation: \"Usa la posizione attuale\",\n    imperial: \"Imperiale\",\n    metric: \"Metrica\",\n    standard: \"Standard\",\n    language: \"Lingua\",\n    units: \"Unità\",\n    unitSystem: \"Sistema di unità\"\n  },\n  'JA': {\n    search: \"検索\",\n    searchToolTip: \"都市名、州、国（米国のみ、他のすべての国では州のパラメーターを無視します）\",\n    useCurrentLocation: \"現在地を使用\",\n    imperial: \"インペリアル\",\n    metric: \"メトリック\",\n    standard: \"標準\",\n    language: \"言語\",\n    units: \"単位\",\n    unitSystem: \"単位系\"\n  },\n  'KR': {\n    search: \"찾다\",\n    searchToolTip: \"도시 이름, 주, 국가(미국만 해당, 다른 모든 국가의 경우 주 매개변수 무시)\",\n    useCurrentLocation: \"현재 위치 사용\",\n    imperial: \"장엄한\",\n    metric: \"미터법\",\n    standard: \"기준\",\n    language: \"언어\",\n    units: \"단위\",\n    unitSystem: \"단위계\"\n  },\n};\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    width: '100%',\n  },\n}));\n\nexport default function Navbar({lang = 'EN', setLanguage, setQuery, setQueryNow, setUnits, setUserLocationError, setLatLon}) {\n  const userLocation = usePosition();\n\n  const languageKey = {\n    1: 'EN', // english\n    2: 'ES', // spanish\n    3: 'FR', // french\n    4: 'RU', // russian\n    5: 'IT', // italian\n    6: 'JA', // japanese\n    7: 'KR', // korean\n  };\n\n  const unitKey = {\n    1: 'standard',\n    2: 'metric',\n    3: 'imperial',\n  };\n\n  const [search, setSearch] = React.useState('');\n  \n  // unit dropdown menu states\n  const [unitEl, setUnitEl] = React.useState(null);\n  const unitOpen = Boolean(unitEl);\n\n  // language dropdown menu states\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  // search event handlers\n  const handleSearchChange = (event) => setSearch(event.target.value);\n  const handleSearch = (event) => {\n    setQuery(search);\n    setQueryNow(true);\n  };\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      setQuery(search);\n      setQueryNow(true);\n    }\n  };\n  \n  // language dropdown event handlers\n  const handleLanguageClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleLanguageClose = (event) => {\n    const languageNumber = event.currentTarget.value || 0;\n\n    // so long as there is a valid key (i.e. languageNumber), update the language\n    if (languageNumber) {\n      setLanguage(languageKey[languageNumber]);\n    }\n\n    setAnchorEl(null);\n  };\n\n  // units dropdown event handlers\n  const handleUnitClick = (event) => {\n    setUnitEl(event.currentTarget);\n  };\n  const handleUnitClose = (event) => {\n    const unitNumber = event.currentTarget.value || 0;\n\n    // so long as a valid key (i.e. unitNumber) exists, update the units\n    if (unitNumber) {\n      const unitType = unitKey[unitNumber];\n      setUnits(localization[lang][unitType]);\n    }\n\n    setUnitEl(null);\n  };\n\n  // whenever the user clicks on the current location icon\n  // lat and lon will be updated\n  const handleLocationClick = (event) => {\n    if (userLocation.error) {\n      setUserLocationError(true);\n    } else {\n      setUserLocationError(false);\n      setLatLon({lat: userLocation.lat, lon: userLocation.lon});\n    }\n  };\n\n  return (\n    <div>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <div>\n            <Tooltip title={localization[lang].searchToolTip}>\n              <StyledInputBase\n                edge=\"start\"\n                placeholder={localization[lang].search}\n                onChange={handleSearchChange}\n                onKeyPress={handleKeyPress}\n              />\n            </Tooltip>\n            <Tooltip title={localization[lang].search}>\n              <IconButton onClick={handleSearch}>\n                <SearchIcon sx={{ color: 'white' }} />\n              </IconButton>\n            </Tooltip>\n          </div>\n\n          <Tooltip title={localization[lang].useCurrentLocation}>\n            <IconButton onClick={handleLocationClick} sx={{marginLeft: 'auto'}}>\n                <MyLocationIcon sx={{ color: 'white' }} />\n            </IconButton>\n          </Tooltip>\n\n          {/* Dropdown button for units */}\n          <Tooltip title={localization[lang].unitSystem} arrow>\n            <Button\n              id=\"demo-customized-button\"\n              aria-controls=\"demo-customized-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleUnitClick}\n              endIcon={<KeyboardArrowDownIcon />}\n            >\n              {localization[lang].units}\n            </Button>\n          </Tooltip>\n\n          {/* Dropdown button for languages */}\n          <Tooltip title={localization[lang].language} arrow>\n            <Button\n              id=\"demo-customized-button\"\n              aria-controls=\"demo-customized-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleLanguageClick}\n              endIcon={<KeyboardArrowDownIcon />}\n            >\n              {lang}\n            </Button>\n          </Tooltip>\n\n          {/* Dropdown menu for units */}\n          <Menu\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            anchorEl={unitEl}\n            open={unitOpen}\n            onClose={handleUnitClose}\n          >\n            <MenuItem value={1} onClick={handleUnitClose} disableRipple>\n              {localization[lang].standard}\n            </MenuItem>\n            <MenuItem value={2} onClick={handleUnitClose} disableRipple>\n              {localization[lang].metric}\n            </MenuItem>\n            <MenuItem value={3} onClick={handleUnitClose} disableRipple>\n              {localization[lang].imperial}\n            </MenuItem>\n          </Menu>\n\n          {/* Dropdown menu for languages */}\n          <Menu\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleLanguageClose}\n          >\n            <MenuItem value={1} onClick={handleLanguageClose} disableRipple>\n              EN\n            </MenuItem>\n            <MenuItem value={2} onClick={handleLanguageClose} disableRipple>\n              ES\n            </MenuItem>\n            <MenuItem value={3} onClick={handleLanguageClose} disableRipple>\n              FR\n            </MenuItem>\n            <MenuItem value={4} onClick={handleLanguageClose} disableRipple>\n              RU\n            </MenuItem>\n            <MenuItem value={5} onClick={handleLanguageClose} disableRipple>\n              IT\n            </MenuItem>\n            <MenuItem value={6} onClick={handleLanguageClose} disableRipple>\n              JA\n            </MenuItem>\n            <MenuItem value={7} onClick={handleLanguageClose} disableRipple>\n              KR\n            </MenuItem>\n          </Menu>\n        </ Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\n\nconst localization = {\n    'EN': {\n        airQuality: \"Air Quality\",\n        airData: \"Air Data\",\n        aqi: \"Air Quality Index\",\n        aqiTooltip: \"Air Quality Index (1=Good, 2=Fair, 3=Moderate, 4=Poor, 5=Very Poor)\",\n        co: \"Carbon Monoxide\",\n        no: \"Nitrogen Monoxide\",\n        no2: \"Nitrogen Dioxide\",\n        o3: \"Ozone\",\n        so2: \"Sulphur Dioxide\",\n        pm2_5: \"Fine Particle Matter\",\n        pm10: \"Coarse Particulate Matter\",\n        nh3: \"Ammonia\",\n    },\n    'ES': {\n        airQuality: \"Calidad Del Aire\",\n        airData: \"Datos De Aire\",\n        aqi: \"Índice de calidad del aire\",\n        aqiTooltip: \"Índice de calidad del aire (1 = Bueno, 2 = Regular, 3 = Moderado, 4 = Deficiente, 5 = Muy deficiente)\",\n        co: \"Monóxido de carbono\",\n        no: \"Monóxido de nitrógeno\",\n        no2: \"Dioxido de nitrogeno\",\n        o3: \"Ozono\",\n        so2: \"Dióxido de azufre\",\n        pm2_5: \"Materia de partículas finas\",\n        pm10: \"Materia particulada gruesa\",\n        nh3: \"Amoníaco\",\n    },\n    'FR': {\n        airQuality: \"Qualité de l'air\",\n        airData: \"Données aériennes\",\n        aqi: \"Indice de qualité de l'air\",\n        aqiTooltip: \"Indice de qualité de l'air (1=Bon, 2=Passable, 3=Modéré, 4=Mauvais, 5=Très mauvais)\",\n        co: \"Monoxyde de carbone\",\n        no: \"Monoxyde d'azote\",\n        no2: \"Dioxyde d'azote\",\n        o3: \"Ozone\",\n        so2: \"Le dioxyde de soufre\",\n        pm2_5: \"Particules fines\",\n        pm10: \"Particules grossières\",\n        nh3: \"Ammoniac\",\n    },\n    'RU': {\n        airQuality: \"Качество воздуха\",\n        airData: \"Воздушные данные\",\n        aqi: \"Индекс качества воздуха\",\n        aqiTooltip: \"Индекс качества воздуха (1 = хорошее, 2 = удовлетворительное, 3 = умеренное, 4 = плохое, 5 = очень плохое)\",\n        co: \"Монооксид углерода\",\n        no: \"Окись азота\",\n        no2: \"Диоксид азота\",\n        o3: \"Озон\",\n        so2: \"Диоксид серы\",\n        pm2_5: \"Мелкодисперсное вещество\",\n        pm10: \"Крупные твердые частицы\",\n        nh3: \"Аммиак\",\n    },\n    'IT': {\n        airQuality: \"Qualità dell'aria\",\n        airData: \"Dati dell'aria\",\n        aqi: \"Indice di qualità dell'aria\",\n        aqiTooltip: \"Indice di qualità dell'aria (1=buono, 2=discreto, 3=moderato, 4=scarso, 5=molto scarso)\",\n        co: \"Monossido di carbonio\",\n        no: \"Monossido di azoto\",\n        no2: \"Diossido di azoto\",\n        o3: \"Ozono\",\n        so2: \"Diossido di zolfo\",\n        pm2_5: \"Particelle fini\",\n        pm10: \"Particolato grossolano\",\n        nh3: \"Ammoniaca\",\n    },\n    'JA': {\n        airQuality: \"空気の質\",\n        airData: \"大気データ\",\n        aqi: \"空気質指数\",\n        aqiTooltip: \"空気質指数（1 =良い、2 =普通、3 =中程度、4 =悪い、5 =非常に悪い）\",\n        co: \"一酸化炭素\",\n        no: \"一酸化窒素\",\n        no2: \"二酸化窒素\",\n        o3: \"オゾン\",\n        so2: \"二酸化硫黄\",\n        pm2_5: \"微粒子状物質\",\n        pm10: \"粗い粒子状物質\",\n        nh3: \"アンモニア\",\n    },\n    'KR': {\n        airQuality: \"대기질\",\n        airData: \"항공 데이터\",\n        aqi: \"대기질 지수\",\n        aqiTooltip: \"대기 질 지수(1=좋음, 2=보통, 3=보통, 4=나쁨, 5=매우 나쁨)\",\n        co: \"일산화탄소\",\n        no: \"일산화질소\",\n        no2: \"이산화질소\",\n        o3: \"오존\",\n        so2: \"이산화황\",\n        pm2_5: \"미세 입자 물질\",\n        pm10: \"거친 입자상 물질\",\n        nh3: \"암모니아\",\n    },\n};\n\nexport default function AirQuality({lang = 'EN', airPollutionData}) {\n    return (\n        <div>\n            <Typography align='center' variant='h6' >{localization[lang].airQuality}</Typography>\n            <Accordion align='left'>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    {localization[lang].airData}\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Tooltip\n                        title={localization[lang].aqiTooltip}\n                        placement='left'\n                    >\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>{localization[lang].aqi}: </span>{airPollutionData.main.aqi}\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].co} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>CO</span> {airPollutionData.components.co} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].no} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>NO</span> {airPollutionData.components.no} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].no2} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>NO2</span> {airPollutionData.components.no2} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].o3} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>O3</span> {airPollutionData.components.o3} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].so2} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>SO2</span> {airPollutionData.components.so2} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].pm2_5} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>PM2.5</span> {airPollutionData.components.pm2_5} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].pm10} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>PM10</span> {airPollutionData.components.pm10} μg/m3\n                        </Typography>\n                    </Tooltip>\n                    <Tooltip title={localization[lang].nh3} placement='left'>\n                        <Typography variant='body1'>\n                            <span style={{fontWeight: 'bold'}}>NH3</span> {airPollutionData.components.nh3} μg/m3\n                        </Typography>\n                    </Tooltip>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","// converts a unix time stamp a readable data and time\n// returns an array of formatted military (24 hr) time and a formatted date\nexport function convertUnixTimeStamp(timestamp) {\n    const date = new Date(timestamp * 1000);\n    const hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    const seconds = \"0\" + date.getSeconds();\n    const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2)\n\n    return [formattedTime, date];\n}\n\n// converts military 24 hour time to regular 12 hour time\n// time parameter has to be in '00:00:00' format\nexport function convertMilitaryTimeToRegularTime(time) {\n    const [hours, minutes, seconds] = time.split(':');\n    const convertedTime = (hours > 12) ? \n        `${hours - 12}:${minutes} PM` : \n        `${hours}:${minutes} AM`;\n        // `${hours - 12}:${minutes}:${seconds} PM` : \n        // `${hours}:${minutes}:${seconds} AM`;\n\n    return convertedTime;\n}","import * as React from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Typography from '@mui/material/Typography';\nimport {\n    convertUnixTimeStamp,\n    convertMilitaryTimeToRegularTime\n} from '../services/timeConverter';\n\nconst localization = {\n    'EN': {\n        title: \"8 Day Forecast\",\n        min: \"Min\",\n        max: \"Max\",\n        humidity: \"Humidity\",\n        uvIndex: \"UV Index\",\n        windSpeed: \"Wind Speed\",\n        sunrise: \"Sunrise\",\n        sunset: \"Sunset\",\n        snow: \"Snow Volume\",\n        rain: \"Rain Volume\",\n    },\n    'ES': {\n        title: \"Previsión de 8 días\",\n        min: \"Mínimo\",\n        max: \"Máximo\",\n        humidity: \"Humedad\",\n        uvIndex: \"Índice ultravioleta\",\n        windSpeed: \"Velocidad del viento\",\n        sunrise: \"Amanecer\",\n        sunset: \"Atardecer\",\n        snow: \"Volumen de nieve\",\n        rain: \"Volumen de lluvia\",\n    },\n    'FR': {\n        title: \"Prévisions sur 8 jours\",\n        min: \"Minimum\",\n        max: \"Maximum\",\n        humidity: \"Humedad\",\n        uvIndex: \"Indice ultraviolet\",\n        windSpeed: \"Vitesse du vent\",\n        sunrise: \"Lever du soleil\",\n        sunset: \"Le coucher du soleil\",\n        snow: \"Volume de neige\",\n        rain: \"Volume de pluie\",\n    },\n    'RU': {\n        title: \"Прогноз на 8 дней\",\n        min: \"Минимум\",\n        max: \"Максимум\",\n        humidity: \"Влажность\",\n        uvIndex: \"Ультрафиолетовый индекс\",\n        windSpeed: \"Скорость ветра\",\n        sunrise: \"Восход солнца\",\n        sunset: \"Закат\",\n        snow: \"Объем снега\",\n        rain: \"Объем дождя\",\n    },\n    'IT': {\n        title: \"Previsione a 8 giorni\",\n        min: \"Minimo\",\n        max: \"Massimo\",\n        humidity: \"Umidità\",\n        uvIndex: \"Indice ultravioletto\",\n        windSpeed: \"Velocità del vento\",\n        sunrise: \"Alba\",\n        sunset: \"Tramonto\",\n        snow: \"Volume di neve\",\n        rain: \"Volume pioggia\",\n    },\n    'JA': {\n        title: \"8日間の天気予報\",\n        min: \"最小\",\n        max: \"最大\",\n        humidity: \"湿度\",\n        uvIndex: \"紫外線指数\",\n        windSpeed: \"風速\",\n        sunrise: \"日の出\",\n        sunset: \"日没\",\n        snow: \"積雪量\",\n        rain: \"雨量\",    \n    },\n    'KR': {\n        title: \"8일 예측\",\n        min: \"최저한의\",\n        max: \"최고\",\n        humidity: \"습기\",\n        uvIndex: \"자외선 지수\",\n        windSpeed: \"풍속\",\n        sunrise: \"해돋이\",\n        sunset: \"일몰\",\n        snow: \"적설량\",\n        rain: \"강우량\",    \n    },\n};\n\nexport default function Forecast({lang = 'EN', weatherData, tempScale, speedScale}) {\n    const iconImage = (code) => `http://openweathermap.org/img/wn/${code}@2x.png`;\n\n    return (\n        <>\n            <Typography align='center' variant='h6' >{localization[lang].title}</Typography>\n            {weatherData.daily.map((day, i) => {\n                return (\n                    <Accordion key={i}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography variant='subtitle1' sx={{fontWeight: '500'}}>\n                                {convertUnixTimeStamp(day.dt)[1].toDateString()}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <img\n                                src={iconImage(day.weather[0].icon)}\n                                alt='Weather Icon'\n                                align='right'\n                            />\n                            <Typography variant='h6'>\n                                {day.weather[0].main}\n                            </Typography>\n                            <Typography variant='body1' gutterBottom>\n                                ({day.weather[0].description})\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].min} {day.temp.min} {tempScale}\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].max} {day.temp.max} {tempScale}\n                            </Typography>\n                            {day.rain ?\n                                <Typography variant='body1'>\n                                    {localization[lang].rain} {day.rain} mm\n                                </Typography>\n                            : (null) }\n                            {day.snow ?\n                                <Typography variant='body1'>\n                                    {localization[lang].snow} {day.snow} mm\n                                </Typography>\n                            : (null) }\n                            <Typography variant='body1'>\n                                {localization[lang].humidity} {day.humidity}%\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].uvIndex} {day.uvi}\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].windSpeed} {day.wind_speed} {speedScale}\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].sunrise} {convertMilitaryTimeToRegularTime(convertUnixTimeStamp(day.sunrise)[0])}\n                            </Typography>\n                            <Typography variant='body1'>\n                                {localization[lang].sunset} {convertMilitaryTimeToRegularTime(convertUnixTimeStamp(day.sunset)[0])}\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion> \n                );\n            })}\n        </>\n    );\n}\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport {\n    convertUnixTimeStamp,\n    convertMilitaryTimeToRegularTime\n} from '../services/timeConverter';\n\nconst localization = {\n    'EN': {\n        asOf: \"As of\",\n        feelsLike: \"Feels Like\",\n        humidity: \"Humidity\",\n        uvIndex: \"UV Index\",\n        windSpeed: \"Wind Speed\",\n        sunrise: \"Sunrise\",\n        sunset: \"Sunset\",\n        snow: \"Snow Volume\",\n        rain: \"Rain Volume\",\n    },\n    'ES': {\n        asOf: \"A partir de\",\n        feelsLike: \"Se siente como\",\n        humidity: \"Humedad\",\n        uvIndex: \"Índice ultravioleta\",\n        windSpeed: \"Velocidad del viento\",\n        sunrise: \"Amanecer\",\n        sunset: \"Atardecer\",\n        snow: \"Volumen de nieve\",\n        rain: \"Volumen de lluvia\",\n    },\n    'FR': {\n        asOf: \"À partir de\",\n        feelsLike: \"Se siente como\",\n        humidity: \"Humedad\",\n        uvIndex: \"Indice ultraviolet\",\n        windSpeed: \"Vitesse du vent\",\n        sunrise: \"Lever du soleil\",\n        sunset: \"Le coucher du soleil\",\n        snow: \"Volume de neige\",\n        rain: \"Volume de pluie\",\n    },\n    'RU': {\n        asOf: \"По состоянию на\",\n        feelsLike: \"Как будто\",\n        humidity: \"Влажность\",\n        uvIndex: \"Ультрафиолетовый индекс\",\n        windSpeed: \"Скорость ветра\",\n        sunrise: \"Восход солнца\",\n        sunset: \"Закат\",\n        snow: \"Объем снега\",\n        rain: \"Объем дождя\",\n    },\n    'IT': {\n        asOf: \"Come di\",\n        feelsLike: \"Si sente come\",\n        humidity: \"Umidità\",\n        uvIndex: \"Indice ultravioletto\",\n        windSpeed: \"Velocità del vento\",\n        sunrise: \"Alba\",\n        sunset: \"Tramonto\",\n        snow: \"Volume di neve\",\n        rain: \"Volume pioggia\",\n    },\n    'JA': {\n        asOf: \"現在\",\n        feelsLike: \"のように感じている\",\n        humidity: \"湿度\",\n        uvIndex: \"紫外線指数\",\n        windSpeed: \"風速\",\n        sunrise: \"日の出\",\n        sunset: \"日没\",\n        snow: \"積雪量\",\n        rain: \"雨量\",    \n    },\n    'KR': {\n        asOf: \"현재\",\n        feelsLike: \"같은 느낌\",\n        humidity: \"습기\",\n        uvIndex: \"자외선 지수\",\n        windSpeed: \"풍속\",\n        sunrise: \"해돋이\",\n        sunset: \"일몰\",\n        snow: \"적설량\",\n        rain: \"강우량\",    \n    },\n};\n\nexport default function Weather({lang = 'EN', weatherData, tempScale, speedScale, locationName}) {\n    const iconImage = (code) => `http://openweathermap.org/img/wn/${code}@2x.png`;\n    const {\n        dt,\n        temp, // kelvin, Celsius, Farenheit\n        feels_like, // kelvin, Celsius, Farenheit\n        humidity, // %\n        uvi, // UV Index\n        wind_speed, // default: metre/sec, metric: metre/sec, imperial: miles/hour\n        sunrise, // unix time for sunrise\n        sunset, // unix time for sunset\n        weather, // array of current type of weather and its description\n        rain, // object of rain volume for past hour (mm)\n        snow, // object of snow volume for past hour (mm)\n    } = weatherData;\n    const formattedSunriseTime = convertMilitaryTimeToRegularTime(convertUnixTimeStamp(sunrise)[0]);\n    const formattedSunsetTime = convertMilitaryTimeToRegularTime(convertUnixTimeStamp(sunset)[0]);\n    const formattedTime = convertMilitaryTimeToRegularTime(convertUnixTimeStamp(dt)[0]);\n\n    return (\n        <>\n            <img\n                src={iconImage(weather[0].icon)}\n                alt=\"Weather Icon\"\n                align='right'\n            />\n            <Typography variant='h6'>{locationName ? locationName : 'Current Location'}</Typography>\n            <Typography>{localization[lang].asOf} {formattedTime}</Typography>\n            <Typography variant=\"h4\">{temp} {tempScale}</Typography>\n            <Typography variant=\"h6\">{weather[0].main}</Typography>\n            <Typography variant=\"body1\" gutterBottom>({weather[0].description})</Typography>\n            <Typography>{localization[lang].feelsLike} {feels_like} {tempScale}</Typography>\n            {weatherData.rain ? <Typography>{localization[lang].rain} {rain['1h']} mm</Typography> : (null)}\n            {weatherData.snow ? <Typography>{localization[lang].snow} {snow['1h']} mm</Typography> : (null)}\n            <Typography>{localization[lang].humidity} {humidity}%</Typography>\n            <Typography>{localization[lang].uvIndex} {uvi}</Typography>\n            <Typography>{localization[lang].windSpeed} {wind_speed} {speedScale}</Typography>\n            <Typography>{localization[lang].sunrise} {formattedSunriseTime}</Typography>\n            <Typography>{localization[lang].sunset} {formattedSunsetTime}</Typography>\n        </>\n    );\n}\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport AirQuality from './AirQuality';\nimport Forecast from './Forecast';\nimport Weather from './Weather';\n\nconst localization = {\n  'EN': {\n    imperial: \"Imperial\",\n    metric: \"Metric\",\n    standard: \"Standard\",\n  },\n  'ES': {\n    imperial: \"Imperial\",\n    metric: \"Métrico\",\n    standard: \"Estándar\",\n  },\n  'FR': {\n    imperial: \"Impérial\",\n    metric: \"Métrique\",\n    standard: \"Standard\",\n  },\n  'RU': {\n    imperial: \"Императорский\",\n    metric: \"Метрическая\",\n    standard: \"Стандарт\",\n  },\n  'IT': {\n    imperial: \"Imperiale\",\n    metric: \"Metrica\",\n    standard: \"Standard\",\n  },\n  'JA': {\n    imperial: \"インペリアル\",\n    metric: \"メトリック\",\n    standard: \"標準\",\n  },\n  'KR': {\n    imperial: \"장엄한\",\n    metric: \"미터법\",\n    standard: \"기준\",\n  },\n};\n  \n\nexport default function WeatherCard({weatherData, lang, airPollutionData, units, locationName}) {\n    let tempScale; // K, °C, or °F\n    let speedScale; // m/s or mph\n\n    const collator = new Intl.Collator(lang.toLowerCase());\n\n    // can't be a switch statement, has to be like this\n    if (collator.compare(localization[lang].standard, units) === 0) {\n      tempScale = 'K';\n      speedScale = 'm/s';\n    } else if (collator.compare(localization[lang].metric, units) === 0) {\n      tempScale = '°C';\n      speedScale = 'm/s';\n    } else if (collator.compare(localization[lang].imperial, units) === 0) {\n      tempScale = '°F';\n      speedScale = 'mph';  \n    } else {\n      tempScale = '°F';\n      speedScale = 'm/s';\n    }\n\n    return (\n        <div>\n            <Card sx={{\n                minWidth: 350,\n                background: 'white',\n                boxShadow: '5px 10px 15px rgba(0, 0, 0, 0.3)'\n            }}>\n                <CardContent align='left'>\n                    <Weather\n                        lang={lang}\n                        locationName={locationName}\n                        weatherData={weatherData.current}\n                        tempScale={tempScale}\n                        speedScale={speedScale}\n                    />\n                </CardContent>\n                <Divider variant='middle' />\n                <CardContent>\n                    <AirQuality\n                        lang={lang}\n                        airPollutionData={airPollutionData}\n                    />\n                </CardContent>\n                <Divider variant='middle' />\n                <CardContent align='left'>\n                    <Forecast\n                        lang={lang}\n                        weatherData={weatherData}\n                        tempScale={tempScale}\n                        speedScale={speedScale}\n                    />\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n    convertUnixTimeStamp,\n    convertMilitaryTimeToRegularTime\n} from '../services/timeConverter';\n\nexport default function WeatherAlerts({alerts}) {\n    const [alertStates, setAlertStates] = React.useState(\n        alerts.map(() => true)\n    );\n\n    const handleAlertClose = (i) => {\n        const copy = [...alertStates];\n        copy[i] = false;\n        setAlertStates(copy);\n    };\n\n    // will get passed in an array of alerts, if the length of array\n    // is 0, then that means there are no alerts in the area to display\n    // so you just return an empty component\n    if (alerts.length === 0) {\n        return (null);\n    }\n\n    return (\n        <Stack sx={{marginBottom: '1rem'}}>\n                {alerts.map((alert, i) => {\n                    return (\n                        <Collapse key={i} in={alertStates[i]} sx={{marginBottom: '1rem'}}>\n                            <Accordion \n                                sx={{background: '#FFF4E5'}}\n                                component={Alert}\n                                align='left'\n                                severity='warning'\n                                action={\n                                    <IconButton\n                                        size='small'\n                                        onClick={() => {handleAlertClose(i)}}\n                                    >\n                                        <CloseIcon fontSize=\"inherit\" />\n                                    </IconButton>\n                                }\n                            >\n                                <AccordionSummary\n                                    component={AlertTitle}\n                                    sx={{marginBottom: '-0.8rem', marginTop: '-0.8rem'}}\n                                >\n                                    {alert.event}\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography variant='body2' sx={{fontWeight: '500'}}>\n                                       {alert.sender_name}\n                                    </Typography>\n                                    <Typography variant='body2'>\n                                        From <span style={{fontWeight: 500}}>{convertMilitaryTimeToRegularTime(convertUnixTimeStamp(alert.start)[0])} </span>\n                                        To <span style={{fontWeight: 500}}>{convertMilitaryTimeToRegularTime(convertUnixTimeStamp(alert.end)[0])}</span>\n                                    </Typography>\n                                    <Typography variant='body2' sx={{marginTop: '1rem'}}>{alert.description}</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Collapse>\n                    );\n                })}\n        </Stack>  \n    );\n}\n","import React, {useEffect} from 'react';\nimport {MapContainer, TileLayer, Marker, useMap} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nfunction UpdateViewTile({center, zoom}) {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (!map) {\n            return;\n        }\n\n        map.setView(center, zoom);\n    }, [map, center]);\n\n    return (\n        <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n    );\n}\n\nexport default function MapWidget({lat, lon}) {\n    const zoom = 12;\n\n    // makrer initilizaiton\n    let DefaultIcon = L.icon({\n        iconUrl: icon,\n        shadowUrl: iconShadow\n    });\n    L.Marker.prototype.options.icon = DefaultIcon;\n\n    return (\n        <MapContainer\n            style={{\n                flex: 1,\n                boxShadow: '5px 10px 15px rgba(0, 0, 0, 0.3)'\n            }}\n            center={[lat, lon]}\n            zoom={zoom}\n            scrollWheelZoom={false}\n        >\n            <UpdateViewTile center={[lat, lon]} zoom={zoom} />\n            <Marker position={[lat, lon]} />\n        </MapContainer>\n    );\n}\n","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst localization = {\n    \"EN\": {\n        error: \"Error! Enable location data and refresh the page to use your current location.\",\n    },\n    \"ES\": {\n        error: \"¡Error! Habilite los datos de ubicación y actualice la página para usar su ubicación actual.\",\n    },\n    \"FR\": {\n        error: \"Erreur! Activez les données de localisation et actualisez la page pour utiliser votre position actuelle.\",\n    },\n    \"RU\": {\n        error: \"Ошибка! Включите данные о местоположении и обновите страницу, чтобы использовать ваше текущее местоположение.\",\n    },\n    \"IT\": {\n        error: \"Errore! Abilita i dati sulla posizione e aggiorna la pagina per utilizzare la tua posizione attuale.\",\n    },\n    \"JA\": {\n        error: \"エラー！位置データを有効にし、現在の位置を使用するようにページを更新します。\",\n    },\n    \"KR\": {\n        error: \"오류! 현재 위치를 사용하려면 위치 데이터를 활성화하고 페이지를 새로고침하세요.\",\n    },\n};\n\nexport default function LocationErrorAlert({lang}) {\n    const [open, setOpen] = React.useState(true);\n\n    return (\n        <>\n            <Collapse in={open}>\n                <Alert\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => setOpen(false)}\n                        >\n                        <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                    severity=\"error\"\n                    sx={{marginBottom: '1rem'}}\n                >\n                    <AlertTitle>{localization[lang].error}</AlertTitle>\n                </Alert>\n            </Collapse>\n        </>\n    );\n}\n","import './App.css';\nimport {useEffect, useState} from 'react';\nimport {getWeatherData} from './services/getWeatherData';\nimport {getGeocodeData} from './services/getGeocodeData';\nimport {getAirPollutionData} from './services/getAirPollutionData';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport Navbar from './components/Navbar';\nimport WeatherCard from './components/WeatherCard';\nimport WeatherAlerts from './components/WeatherAlerts';\nimport MapWidget from './components/MapWidget';\nimport Container from '@mui/material/Container';\nimport {sanitizeQuery} from './services/sanitizeQuery';\nimport {getReverseGeocodeData} from './services/getReverseGeocodeData';\nimport LocationErrorAlert from './components/LocationErrorAlert';\n\nrequire('dotenv').config();\n\nconst localization = {\n  'EN': {\n    \"Imperial\": \"imperial\",\n    \"Metric\": \"metric\",\n    \"Standard\": \"standard\",\n  },\n  'ES': {\n    \"Imperial\": \"imperial\",\n    \"Métrico\": \"metric\",\n    \"Estándar\": \"standard\",\n  },\n  'FR': {\n    \"Impérial\": \"imperial\",\n    \"Métrique\": \"metric\",\n    \"Standard\": \"standard\",\n  },\n  'RU': {\n    \"Императорский\": \"imperial\",\n    \"Метрическая\": \"metric\",\n    \"Стандарт\": \"standard\",\n  },\n  'IT': {\n    \"Imperiale\": \"imperial\",\n    \"Metrica\": \"metric\",\n    \"Standard\": \"standard\",\n  },\n  'JA': {\n    \"インペリアル\": \"imperial\",\n    \"メトリック\": \"metric\",\n    '標準': \"standard\",\n  },\n  'KR': {\n    \"장엄한\": \"imperial\",\n    \"미터법\": \"metric\",\n    \"기준\": \"standard\",\n  },\n};\n\nfunction App() {\n  // for navbar dropdowns\n  const [language, setLanguage] = useState('EN');\n  const [units, setUnits] = useState('imperial'); // measurement units\n\n  // for navbar searchbar\n  const [query, setQuery] = useState('');\n  const [queryNow, setQueryNow] = useState(false);\n\n  // localized name of location\n  const [locationName, setLocationName] = useState('');\n\n  // for language localization\n  const [geoCodeData, setGeoCodeData] = useState(null);\n  // determines if there is an error getting user location or not\n  const [userLocationError, setUserLocationError] = useState(false);\n\n  // default location is CSUN\n  const [latLon, setLatLon] = useState({\n    lat: 34.24106361025065,\n    lon: -118.52767937749145\n  });\n  const [weatherData, setWeatherData] = useState(null);\n  const [airPollutionData, setAirPollutionData] = useState(null);\n\n  // gathers weather data\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      getWeatherData(\n        latLon.lat, \n        latLon.lon,\n        localization[language][units],\n        language, process.env.REACT_APP_WEATHER_KEY\n      ).then((response) => {\n          if (response) {\n            setWeatherData(response);\n          }\n        });\n    }\n\n    return () => mounted = false;\n  }, [language, units, latLon]);\n\n  // gathers air pollution data\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && latLon) {\n      getAirPollutionData(\n        latLon.lat,\n        latLon.lon,\n        process.env.REACT_APP_WEATHER_KEY\n      ).then((response) => {\n          if (response.list.length !== 0) {\n            setAirPollutionData(response.list[0]);\n          }\n        });\n    }\n\n    return () => mounted = false;\n  }, [latLon]);\n\n  // gathers coordinates based on query search\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && queryNow) {\n      // will have to sanitize query here\n      const sanitizedQuery = sanitizeQuery(query);\n\n      getGeocodeData(sanitizedQuery, 1, process.env.REACT_APP_WEATHER_KEY)\n      .then((response) => {\n          const data = response[0];\n          if (data && data.local_names) {\n            setLocationName(data.local_names[language.toLowerCase()] || data.name);\n          } else {\n            setLocationName(data.name);\n          }\n\n          if (data) {\n            setGeoCodeData(data); // for language support\n            setLatLon({lat: data.lat, lon: data.lon});\n          }\n\n          // if this is removed, you will make infinite API calls\n          // DON'T REMOVE THIS LINE\n          setQueryNow(false);\n        });\n    }\n\n    return () => mounted = false;\n  }, [queryNow, units]);\n  \n  // gathers localized names for places based on coordinates\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      getReverseGeocodeData(\n        latLon.lat,\n        latLon.lon,\n        5,\n        process.env.REACT_APP_WEATHER_KEY\n      ).then((response) => {\n          const {\n            name,\n            local_names: localizedNames,\n          } = response[0];\n\n          if (localizedNames && localizedNames[language.toLowerCase()]) {\n            setLocationName(localizedNames[language.toLowerCase()]);\n          } else {\n            setLocationName(name);\n          }\n        });\n    }\n\n    return () => mounted = true;\n  }, [language, latLon]);\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        lang={language}\n        units={units}\n        setLanguage={setLanguage}\n        setUnits={setUnits}\n        setQuery={setQuery}\n        setQueryNow={setQueryNow}\n        setLatLon={setLatLon}\n        setUserLocationError={setUserLocationError}\n      />\n      {!weatherData ?\n        <CircularProgress sx={{marginTop: 10}} />\n      :\n        <Container maxWidth=\"lg\">\n          <Box sx={{margin: '2rem 0'}}>\n              {userLocationError ? <LocationErrorAlert lang={language}/> : (null)}\n              {weatherData.alerts ? <WeatherAlerts alerts={weatherData.alerts} /> : (null) }\n              <Box sx={{display: 'flex', justifyContent: 'center', gap: '2rem'}}>\n                {weatherData && airPollutionData ?\n                  <WeatherCard\n                    lang={language}\n                    locationName={locationName}\n                    geoCodeData={geoCodeData}\n                    weatherData={weatherData}\n                    airPollutionData={airPollutionData}\n                    units={units}\n                  />\n                : (null)}\n                <MapWidget\n                  lat={latLon.lat}\n                  lon={latLon.lon}\n                />\n              </Box>\n              <div style={{display: 'flex', flex: 1}}>\n              </div>\n          </Box>\n        </Container>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// will return weather data based on passed in latitude and longitude\nexport function getWeatherData(lat, lon, units = 'imperial', lang = 'en', key, exclude = 'minutely,hourly') {\n  return fetch(`https://api.openweathermap.org/data/2.5/onecall?&lat=${lat}&lon=${lon}&units=${units}&lang=${lang.toLowerCase()}&appid=${key}&exclude=${exclude}`)\n    .then(data => data.json());\n}","export function getAirPollutionData(lat, lon, key) {\n    return fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${key}`)\n        .then(data => data.json());\n}","export function sanitizeQuery(query) {\n    // convert query to lowercase and uppercase strings\n    const lower = query.toLowerCase();\n    const upper = query.toUpperCase();\n    \n    // compare the lowercase letters and uppercase letters\n    // if they equate to each other (notice the != instead of\n    // the !== symbol) then you add them to the result if the\n    // current character also happens to be a number, add that\n    // to the result as well\n    let res = \"\";\n    for(let i = 0; i < lower.length; ++i) {\n        if(lower[i] != upper[i] || lower[i].trim() === '' || !isNaN(lower[i])) {\n            res += query[i];\n        }\n    }\n\n    // trims whitespace and replaces multiple spaces with a single space\n    const multipleSpaces = res.trim().replaceAll(/\\s\\s+/g, ' ');\n    // replaces singular spaces with a ',' character\n    const sanitized = multipleSpaces.replaceAll(' ', ',');\n\n    return sanitized;\n}","// will return geolocation data based on query results\nexport function getGeocodeData(query = '', limit = 1, key) {\n    return fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=${limit}&appid=${key}`)\n        .then(data => data.json());\n}","// will return geolocation data based on query results\nexport function getReverseGeocodeData(lat, lon, limit, key) {\n    return fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=${limit}&appid=${key}`)\n        .then(data => data.json());\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}